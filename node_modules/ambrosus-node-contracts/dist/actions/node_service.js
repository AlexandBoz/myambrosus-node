'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Copyright: Ambrosus Inc.
Email: tech@ambrosus.com

This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
*/

var NodeServiceActions = function () {
  function NodeServiceActions(rolesWrapper) {
    (0, _classCallCheck3.default)(this, NodeServiceActions);

    this.rolesWrapper = rolesWrapper;
  }

  (0, _createClass3.default)(NodeServiceActions, [{
    key: 'setNodeUrl',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(address, url) {
        var roles;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                roles = this.rolesWrapper;

                if (!(address !== roles.defaultAddress)) {
                  _context.next = 3;
                  break;
                }

                throw new Error('You can only change your own url');

              case 3:
                _context.next = 5;
                return roles.setNodeUrl(address, url);

              case 5:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function setNodeUrl(_x, _x2) {
        return _ref.apply(this, arguments);
      }

      return setNodeUrl;
    }()
  }]);
  return NodeServiceActions;
}();

exports.default = NodeServiceActions;