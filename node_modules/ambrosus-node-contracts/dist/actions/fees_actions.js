'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Copyright: Ambrosus Inc.
Email: tech@ambrosus.com

This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
*/

var FeesActions = function () {
  function FeesActions(feesWrapper) {
    (0, _classCallCheck3.default)(this, FeesActions);

    this.feesWrapper = feesWrapper;
  }

  (0, _createClass3.default)(FeesActions, [{
    key: 'transferOwnership',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(newOwnerAddress) {
        var owner;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.feesWrapper.getOwner();

              case 2:
                owner = _context.sent;

                if (!(owner !== this.feesWrapper.defaultAddress)) {
                  _context.next = 5;
                  break;
                }

                throw new Error('You need to be the owner of the Fees contract to be able to transfer ownership');

              case 5:
                return _context.abrupt('return', this.feesWrapper.transferOwnership(newOwnerAddress));

              case 6:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function transferOwnership(_x) {
        return _ref.apply(this, arguments);
      }

      return transferOwnership;
    }()
  }, {
    key: 'setBaseUploadFee',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(fee) {
        var owner;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.feesWrapper.getOwner();

              case 2:
                owner = _context2.sent;

                if (!(owner !== this.feesWrapper.defaultAddress)) {
                  _context2.next = 5;
                  break;
                }

                throw new Error('You need to be the owner of the Fees contract to set an upload fee');

              case 5:
                return _context2.abrupt('return', this.feesWrapper.setBaseUploadFee(fee));

              case 6:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function setBaseUploadFee(_x2) {
        return _ref2.apply(this, arguments);
      }

      return setBaseUploadFee;
    }()
  }, {
    key: 'feeForUpload',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(storagePeriods) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt('return', this.feesWrapper.feeForUpload(storagePeriods));

              case 1:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function feeForUpload(_x3) {
        return _ref3.apply(this, arguments);
      }

      return feeForUpload;
    }()
  }, {
    key: 'feeForChallenge',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(storagePeriods) {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt('return', this.feesWrapper.feeForChallenge(storagePeriods));

              case 1:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function feeForChallenge(_x4) {
        return _ref4.apply(this, arguments);
      }

      return feeForChallenge;
    }()
  }]);
  return FeesActions;
}();

exports.default = FeesActions;