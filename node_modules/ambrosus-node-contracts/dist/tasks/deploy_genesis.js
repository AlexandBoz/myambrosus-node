'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _task_base = require('./base/task_base');

var _task_base2 = _interopRequireDefault(_task_base);

var _commandLineArgs = require('command-line-args');

var _commandLineArgs2 = _interopRequireDefault(_commandLineArgs);

var _file = require('../utils/file');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DeployGenesisTask = function (_TaskBase) {
  (0, _inherits3.default)(DeployGenesisTask, _TaskBase);

  function DeployGenesisTask(web3, deployActions) {
    (0, _classCallCheck3.default)(this, DeployGenesisTask);

    var _this = (0, _possibleConstructorReturn3.default)(this, (DeployGenesisTask.__proto__ || Object.getPrototypeOf(DeployGenesisTask)).call(this));

    _this.web3 = web3;
    _this.deployActions = deployActions;
    return _this;
  }

  (0, _createClass3.default)(DeployGenesisTask, [{
    key: 'execute',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(args) {
        var _this2 = this;

        var options, initialValidators, genesisContracts, envFile;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                console.log('Deploying genesis contracts. This may take some time...');

                options = this.parseOptions(args);

                if (!(options === null)) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt('return');

              case 4:
                initialValidators = Array(3).fill(null).map(function () {
                  return _this2.web3.eth.accounts.create().address;
                });

                console.log('Initial validators are: ' + initialValidators);

                _context.next = 8;
                return this.deployActions.deployGenesis(initialValidators);

              case 8:
                genesisContracts = _context.sent;

                console.log('Genesis deployed: ');
                this.prettyPrintAddresses(genesisContracts);

                envFile = this.contractsToEnvFile(genesisContracts);

                if (!options.save) {
                  _context.next = 17;
                  break;
                }

                _context.next = 15;
                return (0, _file.appendEnvFile)(options.save, envFile);

              case 15:
                _context.next = 18;
                break;

              case 17:
                this.printSummary(envFile);

              case 18:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function execute(_x) {
        return _ref.apply(this, arguments);
      }

      return execute;
    }()
  }, {
    key: 'parseOptions',
    value: function parseOptions(args) {
      var options = (0, _commandLineArgs2.default)([{ name: 'save', type: String }], { argv: args, partial: true });
      // eslint-disable-next-line no-underscore-dangle
      var unknownOptions = options._unknown;
      if (unknownOptions && unknownOptions.length > 0) {
        console.error('Unknown options: ' + unknownOptions.join(', '));
        return null;
      }

      if (options.save === null) {
        console.error('You should provide a value for the save parameter.');
        return null;
      }

      return options;
    }
  }, {
    key: 'prettyPrintAddresses',
    value: function prettyPrintAddresses(contracts) {
      return Object.entries(contracts).forEach(function (_ref2) {
        var _ref3 = (0, _slicedToArray3.default)(_ref2, 2),
            key = _ref3[0],
            contract = _ref3[1];

        return console.log('\t' + key + ' -> ' + contract.options.address);
      });
    }
  }, {
    key: 'printSummary',
    value: function printSummary(envFile) {
      console.log('Contracts deployed, save following environment configuration directives to start using them:');
      console.log(envFile);
    }
  }, {
    key: 'contractsToEnvFile',
    value: function contractsToEnvFile(addresses) {
      return 'HEAD_CONTRACT_ADDRESS="' + addresses.head.options.address + '"\nVALIDATOR_SET_CONTRACT_ADDRESS="' + addresses.validatorSet.options.address + '"\nBLOCK_REWARDS_CONTRACT_ADDRESS="' + addresses.blockRewards.options.address + '"\n';
    }
  }, {
    key: 'help',
    value: function help() {
      return {
        description: 'deploys genesis contracts'
      };
    }
  }]);
  return DeployGenesisTask;
}(_task_base2.default); /*
                        Copyright: Ambrosus Inc.
                        Email: tech@ambrosus.com
                        
                        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
                        
                        This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
                        */

exports.default = DeployGenesisTask;