'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _toArray2 = require('babel-runtime/helpers/toArray');

var _toArray3 = _interopRequireDefault(_toArray2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _task_base = require('./base/task_base');

var _task_base2 = _interopRequireDefault(_task_base);

var _web3_tools = require('../utils/web3_tools');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Copyright: Ambrosus Inc.
Email: tech@ambrosus.com

This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
*/

var ChallengeTask = function (_TaskBase) {
  (0, _inherits3.default)(ChallengeTask, _TaskBase);

  function ChallengeTask(challengeActions) {
    (0, _classCallCheck3.default)(this, ChallengeTask);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ChallengeTask.__proto__ || Object.getPrototypeOf(ChallengeTask)).call(this));

    _this.challengeActions = challengeActions;
    return _this;
  }

  (0, _createClass3.default)(ChallengeTask, [{
    key: 'execute',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2) {
        var _ref3 = (0, _toArray3.default)(_ref2),
            command = _ref3[0],
            options = _ref3.slice(1);

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(command === 'start')) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt('return', this.start(options[0], options[1]));

              case 2:
                if (!(command === 'resolve')) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt('return', this.resolve(options[0]));

              case 4:
                if (!(command === 'expire')) {
                  _context.next = 6;
                  break;
                }

                return _context.abrupt('return', this.expire(options[0]));

              case 6:
                if (!(command === 'status')) {
                  _context.next = 8;
                  break;
                }

                return _context.abrupt('return', this.status(options[0]));

              case 8:
                if (!(command === 'nextPenalty')) {
                  _context.next = 10;
                  break;
                }

                return _context.abrupt('return', this.nextPenalty(options[0]));

              case 10:
                if (command === 'help') {
                  this.printUsage();
                } else {
                  console.error('Unknown sub-command, see yarn task challenges help');
                  process.exit(1);
                }

              case 11:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function execute(_x) {
        return _ref.apply(this, arguments);
      }

      return execute;
    }()
  }, {
    key: 'is64DigitsHexString',
    value: function is64DigitsHexString(value) {
      return (/^0x[0-9a-f]{64}$/i.exec(value) !== null
      );
    }
  }, {
    key: 'validateAddress',
    value: function validateAddress(address) {
      if (!_web3_tools.utils.isAddress(address)) {
        throw 'Invalid address: ' + address;
      }
    }
  }, {
    key: 'validateId',
    value: function validateId(validatedId) {
      if (!this.is64DigitsHexString(validatedId)) {
        throw 'Invalid Id: ' + validatedId;
      }
    }
  }, {
    key: 'printUsage',
    value: function printUsage() {
      console.log('\nUsage: yarn task challenges [start/expire/status]\nOptions:\n  - start [sheltererAddress bundleId]\n  - resolve [challengeId]\n  - expire [challengeId]\n  - status [challengeId]\n  - nextPenalty [sheltererAddress]');
    }
  }, {
    key: 'start',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(sheltererId, bundleId) {
        var _ref5, transactionHash, challengeId;

        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.validateAddress(sheltererId);
                this.validateId(bundleId);
                _context2.next = 4;
                return this.challengeActions.startChallenge(sheltererId, bundleId);

              case 4:
                _ref5 = _context2.sent;
                transactionHash = _ref5.transactionHash;
                challengeId = _ref5.challengeId;

                console.log('Challenge with ID = ' + challengeId + ' has been created. \nTransaction ID - ' + transactionHash);

              case 8:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function start(_x2, _x3) {
        return _ref4.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: 'resolve',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(challengeId) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.validateId(challengeId);
                _context3.next = 3;
                return this.challengeActions.challengeWrapper.resolve(challengeId);

              case 3:
                console.log('Challenge resolved');

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function resolve(_x4) {
        return _ref6.apply(this, arguments);
      }

      return resolve;
    }()
  }, {
    key: 'expire',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(challengeId) {
        var _ref8, transactionHash;

        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.validateId(challengeId);
                _context4.next = 3;
                return this.challengeActions.markAsExpired(challengeId);

              case 3:
                _ref8 = _context4.sent;
                transactionHash = _ref8.transactionHash;

                console.log('Challenge successfully marked as expired.\nTransaction ID - ' + transactionHash);

              case 6:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function expire(_x5) {
        return _ref7.apply(this, arguments);
      }

      return expire;
    }()
  }, {
    key: 'status',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(challengeId) {
        var status;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this.validateId(challengeId);
                _context5.next = 3;
                return this.challengeActions.challengeStatus(challengeId);

              case 3:
                status = _context5.sent;

                if (status.isInProgress) {
                  _context5.next = 7;
                  break;
                }

                console.log('There is no challenge with ID = ' + challengeId + ' being in progress right now');
                return _context5.abrupt('return');

              case 7:
                console.log('Challenge with ID = ' + challengeId + ' is in progress.');
                if (status.canResolve) {
                  console.log('And it can be resolved by you.');
                } else {
                  console.log('However, it cannot be resolved by you at the moment.');
                }
                if (status.isTimedOut) {
                  console.log('This challenge is past its expiration date and has not been resolved. \nYou can now mark it as expired.');
                }

              case 10:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function status(_x6) {
        return _ref9.apply(this, arguments);
      }

      return status;
    }()
  }, {
    key: 'nextPenalty',
    value: function () {
      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(sheltererId) {
        var penalty;
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.validateAddress(sheltererId);
                _context6.next = 3;
                return this.challengeActions.nextPenalty(sheltererId);

              case 3:
                penalty = _context6.sent;

                console.log('Potential penalty for ' + sheltererId + ' is ' + _web3_tools.utils.fromWei(penalty, 'ether') + ' AMB');

              case 5:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function nextPenalty(_x7) {
        return _ref10.apply(this, arguments);
      }

      return nextPenalty;
    }()
  }, {
    key: 'help',
    value: function help() {
      return {
        options: '[start sheltererAddress bundleId], [resolve/expire/status challengeId], [nextPenalty sheltererAddress]',
        description: 'creates and manages challenges'
      };
    }
  }]);
  return ChallengeTask;
}(_task_base2.default);

exports.default = ChallengeTask;