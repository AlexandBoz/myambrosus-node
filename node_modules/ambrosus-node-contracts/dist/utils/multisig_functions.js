'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends3 = require('babel-runtime/helpers/extends');

var _extends4 = _interopRequireDefault(_extends3);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _contract_jsons = require('../contract_jsons');

var _contract_jsons2 = _interopRequireDefault(_contract_jsons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MultisigFunctions = function () {
  function MultisigFunctions(web3) {
    (0, _classCallCheck3.default)(this, MultisigFunctions);

    this.web3 = web3;
    this.functionAbis = (0, _extends4.default)({}, this.getFunctionSignatures(_contract_jsons.multisig.abi), this.getFunctionSignatures(_contract_jsons2.default.multiplexer.abi));
  }

  (0, _createClass3.default)(MultisigFunctions, [{
    key: 'getFunctionSignatures',
    value: function getFunctionSignatures(abi) {
      var _this = this;

      return abi.filter(function (abiEntry) {
        return abiEntry.type === 'function' && !abiEntry.constant;
      }).map(function (abiEntry) {
        return (0, _defineProperty3.default)({}, _this.web3.eth.abi.encodeFunctionSignature(abiEntry), {
          name: abiEntry.name,
          inputs: abiEntry.inputs
        });
      }).reduce(function (acc, entry) {
        return (0, _extends4.default)({}, acc, entry);
      }, {});
    }
  }, {
    key: 'getFunctionName',
    value: function getFunctionName(transactionData) {
      return this.functionAbis[transactionData.substring(0, 10)].name;
    }
  }, {
    key: 'getFunctionArguments',
    value: function getFunctionArguments(transactionData) {
      var inputs = this.functionAbis[transactionData.substring(0, 10)].inputs;

      var parameters = this.web3.eth.abi.decodeParameters(inputs, '0x' + transactionData.substring(10));
      return inputs.reduce(function (acc, _ref2) {
        var name = _ref2.name;
        return (0, _extends4.default)({}, acc, (0, _defineProperty3.default)({}, name, parameters[name]));
      }, {});
    }
  }]);
  return MultisigFunctions;
}(); /*
     Copyright: Ambrosus Inc.
     Email: tech@ambrosus.com
     
     This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
     
     This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
     */


exports.default = MultisigFunctions;