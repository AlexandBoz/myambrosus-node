'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertRateToBaseReward = convertRateToBaseReward;
exports.convertBaseRewardToRate = convertBaseRewardToRate;

var _bignumber = require('bignumber.js');

var _bignumber2 = _interopRequireDefault(_bignumber);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Copyright: Ambrosus Inc.
Email: tech@ambrosus.com

This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
*/

_bignumber2.default.config({ EXPONENTIAL_AT: 1e+9 });

function convertRateToBaseReward(rate) {
  if (rate < 0 || rate > 100) {
    throw 'Invalid rate';
  }
  _bignumber2.default.set({ ROUNDING_MODE: _bignumber2.default.ROUND_DOWN });

  var totalSupply = new _bignumber2.default(_constants.TOTAL_AMB_SUPPLY);
  var numberOfBlocksInYear = new _bignumber2.default(_constants.BLOCKS_PER_YEAR);

  var baseReward = totalSupply.dividedBy(numberOfBlocksInYear).multipliedBy(rate).dividedBy(100);

  return baseReward.toFixed(0);
}

function convertBaseRewardToRate(baseReward) {
  var baseRewordBN = new _bignumber2.default(baseReward);
  var totalSupply = new _bignumber2.default(_constants.TOTAL_AMB_SUPPLY);
  var numberOfBlocksInYear = new _bignumber2.default(_constants.BLOCKS_PER_YEAR);

  _bignumber2.default.set({ ROUNDING_MODE: _bignumber2.default.ROUND_HALF_UP });
  var rate = baseRewordBN.multipliedBy(numberOfBlocksInYear).multipliedBy(100).dividedBy(totalSupply);

  return rate.toFixed(2);
}