'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _managed_contract_wrapper = require('./managed_contract_wrapper');

var _managed_contract_wrapper2 = _interopRequireDefault(_managed_contract_wrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ShelteringTransfersWrapper = function (_ManagedContractWrapp) {
  (0, _inherits3.default)(ShelteringTransfersWrapper, _ManagedContractWrapp);

  function ShelteringTransfersWrapper() {
    (0, _classCallCheck3.default)(this, ShelteringTransfersWrapper);
    return (0, _possibleConstructorReturn3.default)(this, (ShelteringTransfersWrapper.__proto__ || Object.getPrototypeOf(ShelteringTransfersWrapper)).apply(this, arguments));
  }

  (0, _createClass3.default)(ShelteringTransfersWrapper, [{
    key: 'resolve',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.contract();

              case 2:
                contract = _context.sent;
                return _context.abrupt('return', this.processTransaction(contract.methods.resolve(transferId)));

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function resolve(_x) {
        return _ref.apply(this, arguments);
      }

      return resolve;
    }()
  }, {
    key: 'start',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(bundleId) {
        var contract;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.contract();

              case 2:
                contract = _context2.sent;
                return _context2.abrupt('return', this.processTransaction(contract.methods.start(bundleId)));

              case 4:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function start(_x2) {
        return _ref2.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: 'cancel',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.contract();

              case 2:
                contract = _context3.sent;
                return _context3.abrupt('return', this.processTransaction(contract.methods.cancel(transferId)));

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function cancel(_x3) {
        return _ref3.apply(this, arguments);
      }

      return cancel;
    }()
  }, {
    key: 'getTransferId',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(sheltererId, bundleId) {
        var contract;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.contract();

              case 2:
                contract = _context4.sent;
                return _context4.abrupt('return', contract.methods.getTransferId(sheltererId, bundleId).call());

              case 4:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getTransferId(_x4, _x5) {
        return _ref4.apply(this, arguments);
      }

      return getTransferId;
    }()
  }, {
    key: 'getDonor',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.contract();

              case 2:
                contract = _context5.sent;
                return _context5.abrupt('return', contract.methods.getDonor(transferId).call());

              case 4:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function getDonor(_x6) {
        return _ref5.apply(this, arguments);
      }

      return getDonor;
    }()
  }, {
    key: 'getTransferredBundle',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.contract();

              case 2:
                contract = _context6.sent;
                return _context6.abrupt('return', contract.methods.getBundle(transferId).call());

              case 4:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function getTransferredBundle(_x7) {
        return _ref6.apply(this, arguments);
      }

      return getTransferredBundle;
    }()
  }, {
    key: 'isInProgress',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.contract();

              case 2:
                contract = _context7.sent;
                return _context7.abrupt('return', contract.methods.isInProgress(transferId).call());

              case 4:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function isInProgress(_x8) {
        return _ref7.apply(this, arguments);
      }

      return isInProgress;
    }()
  }, {
    key: 'canResolve',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.contract();

              case 2:
                contract = _context8.sent;
                return _context8.abrupt('return', contract.methods.canResolve(this.defaultAddress, transferId).call());

              case 4:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function canResolve(_x9) {
        return _ref8.apply(this, arguments);
      }

      return canResolve;
    }()
  }, {
    key: 'getTransferCreationTime',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.contract();

              case 2:
                contract = _context9.sent;
                return _context9.abrupt('return', contract.methods.getCreationTime(transferId).call());

              case 4:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function getTransferCreationTime(_x10) {
        return _ref9.apply(this, arguments);
      }

      return getTransferCreationTime;
    }()
  }, {
    key: 'getTransferDesignatedShelterer',
    value: function () {
      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10(transferId) {
        var contract;
        return _regenerator2.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.contract();

              case 2:
                contract = _context10.sent;
                return _context10.abrupt('return', contract.methods.getDesignatedShelterer(transferId).call());

              case 4:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function getTransferDesignatedShelterer(_x11) {
        return _ref10.apply(this, arguments);
      }

      return getTransferDesignatedShelterer;
    }()
  }, {
    key: 'getContractName',
    get: function get() {
      return 'shelteringTransfers';
    }
  }]);
  return ShelteringTransfersWrapper;
}(_managed_contract_wrapper2.default); /*
                                       Copyright: Ambrosus Inc.
                                       Email: tech@ambrosus.com
                                       
                                       This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
                                       
                                       This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
                                       */

exports.default = ShelteringTransfersWrapper;