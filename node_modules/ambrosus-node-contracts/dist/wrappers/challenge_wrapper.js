'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _constants = require('../constants');

var _managed_contract_wrapper = require('./managed_contract_wrapper');

var _managed_contract_wrapper2 = _interopRequireDefault(_managed_contract_wrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Copyright: Ambrosus Inc.
Email: tech@ambrosus.com

This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
*/

var ChallengeWrapper = function (_ManagedContractWrapp) {
  (0, _inherits3.default)(ChallengeWrapper, _ManagedContractWrapp);

  function ChallengeWrapper() {
    (0, _classCallCheck3.default)(this, ChallengeWrapper);
    return (0, _possibleConstructorReturn3.default)(this, (ChallengeWrapper.__proto__ || Object.getPrototypeOf(ChallengeWrapper)).apply(this, arguments));
  }

  (0, _createClass3.default)(ChallengeWrapper, [{
    key: 'earliestMeaningfulBlock',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(challengeDuration) {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = Math;
                _context.next = 3;
                return this.web3.eth.getBlockNumber();

              case 3:
                _context.t1 = _context.sent;
                _context.t2 = Math.ceil(challengeDuration / _constants.MIN_BLOCK_TIME);
                _context.t3 = _context.t1 - _context.t2;
                return _context.abrupt('return', _context.t0.max.call(_context.t0, 0, _context.t3));

              case 7:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function earliestMeaningfulBlock(_x) {
        return _ref.apply(this, arguments);
      }

      return earliestMeaningfulBlock;
    }()
  }, {
    key: 'resolve',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.contract();

              case 2:
                contract = _context2.sent;
                return _context2.abrupt('return', this.processTransaction(contract.methods.resolve(challengeId)));

              case 4:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function resolve(_x2) {
        return _ref2.apply(this, arguments);
      }

      return resolve;
    }()
  }, {
    key: 'start',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(sheltererId, bundleId, fee) {
        var contract;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.contract();

              case 2:
                contract = _context3.sent;
                return _context3.abrupt('return', this.processTransaction(contract.methods.start(sheltererId, bundleId), { value: fee }));

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function start(_x3, _x4, _x5) {
        return _ref3.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: 'markAsExpired',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.contract();

              case 2:
                contract = _context4.sent;
                return _context4.abrupt('return', this.processTransaction(contract.methods.markAsExpired(challengeId)));

              case 4:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function markAsExpired(_x6) {
        return _ref4.apply(this, arguments);
      }

      return markAsExpired;
    }()
  }, {
    key: 'challengeIsTimedOut',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this.contract();

              case 2:
                contract = _context5.sent;
                return _context5.abrupt('return', contract.methods.challengeIsTimedOut(challengeId).call());

              case 4:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function challengeIsTimedOut(_x7) {
        return _ref5.apply(this, arguments);
      }

      return challengeIsTimedOut;
    }()
  }, {
    key: 'canResolve',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return this.contract();

              case 2:
                contract = _context6.sent;
                return _context6.abrupt('return', contract.methods.canResolve(this.defaultAddress, challengeId).call());

              case 4:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function canResolve(_x8) {
        return _ref6.apply(this, arguments);
      }

      return canResolve;
    }()
  }, {
    key: 'getChallengeId',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7(sheltererId, bundleId) {
        var contract;
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.contract();

              case 2:
                contract = _context7.sent;
                return _context7.abrupt('return', contract.methods.getChallengeId(sheltererId, bundleId).call());

              case 4:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function getChallengeId(_x9, _x10) {
        return _ref7.apply(this, arguments);
      }

      return getChallengeId;
    }()
  }, {
    key: 'getChallengeCreationTime',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.contract();

              case 2:
                contract = _context8.sent;
                return _context8.abrupt('return', contract.methods.getCreationTime(challengeId).call());

              case 4:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function getChallengeCreationTime(_x11) {
        return _ref8.apply(this, arguments);
      }

      return getChallengeCreationTime;
    }()
  }, {
    key: 'isInProgress',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.contract();

              case 2:
                contract = _context9.sent;
                return _context9.abrupt('return', contract.methods.isInProgress(challengeId).call());

              case 4:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function isInProgress(_x12) {
        return _ref9.apply(this, arguments);
      }

      return isInProgress;
    }()
  }, {
    key: 'getChallengeDesignatedShelterer',
    value: function () {
      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10(challengeId) {
        var contract;
        return _regenerator2.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.contract();

              case 2:
                contract = _context10.sent;
                return _context10.abrupt('return', contract.methods.getDesignatedShelterer(challengeId).call());

              case 4:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function getChallengeDesignatedShelterer(_x13) {
        return _ref10.apply(this, arguments);
      }

      return getChallengeDesignatedShelterer;
    }()
  }, {
    key: 'getContractName',
    get: function get() {
      return 'challenges';
    }
  }]);
  return ChallengeWrapper;
}(_managed_contract_wrapper2.default);

exports.default = ChallengeWrapper;