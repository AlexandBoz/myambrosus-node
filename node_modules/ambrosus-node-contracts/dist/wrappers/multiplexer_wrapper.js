'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _contract_jsons = require('../contract_jsons');

var _contract_jsons2 = _interopRequireDefault(_contract_jsons);

var _genesis_contract_wrapper = require('./genesis_contract_wrapper');

var _genesis_contract_wrapper2 = _interopRequireDefault(_genesis_contract_wrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Copyright: Ambrosus Inc.
Email: tech@ambrosus.com

This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
*/

var MultiplexerWrapper = function (_GenesisContractWrapp) {
  (0, _inherits3.default)(MultiplexerWrapper, _GenesisContractWrapp);

  function MultiplexerWrapper(multiplexerContractAddress, web3, defaultAddress) {
    (0, _classCallCheck3.default)(this, MultiplexerWrapper);
    return (0, _possibleConstructorReturn3.default)(this, (MultiplexerWrapper.__proto__ || Object.getPrototypeOf(MultiplexerWrapper)).call(this, multiplexerContractAddress, _contract_jsons2.default.multiplexer, web3, defaultAddress));
  }

  (0, _createClass3.default)(MultiplexerWrapper, [{
    key: 'transferOwnership',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(newOwnerAddress) {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this.contract.methods.transferOwnership(newOwnerAddress).encodeABI());

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function transferOwnership(_x) {
        return _ref.apply(this, arguments);
      }

      return transferOwnership;
    }()
  }, {
    key: 'transferContractsOwnership',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(address) {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt('return', this.contract.methods.transferContractsOwnership(address).encodeABI());

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function transferContractsOwnership(_x2) {
        return _ref2.apply(this, arguments);
      }

      return transferContractsOwnership;
    }()
  }, {
    key: 'changeContext',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(contextAddress) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt('return', this.contract.methods.changeContext(contextAddress).encodeABI());

              case 1:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function changeContext(_x3) {
        return _ref3.apply(this, arguments);
      }

      return changeContext;
    }()
  }, {
    key: 'addToWhitelist',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(candidateAddress, role, deposit) {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt('return', this.contract.methods.addToWhitelist(candidateAddress, role, deposit).encodeABI());

              case 1:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function addToWhitelist(_x4, _x5, _x6) {
        return _ref4.apply(this, arguments);
      }

      return addToWhitelist;
    }()
  }, {
    key: 'removeFromWhitelist',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(candidateAddress) {
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt('return', this.contract.methods.removeFromWhitelist(candidateAddress).encodeABI());

              case 1:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function removeFromWhitelist(_x7) {
        return _ref5.apply(this, arguments);
      }

      return removeFromWhitelist;
    }()
  }, {
    key: 'setBaseUploadFee',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(fee) {
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                return _context6.abrupt('return', this.contract.methods.setBaseUploadFee(fee).encodeABI());

              case 1:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function setBaseUploadFee(_x8) {
        return _ref6.apply(this, arguments);
      }

      return setBaseUploadFee;
    }()
  }, {
    key: 'transferOwnershipForValidatorSet',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7(address) {
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt('return', this.contract.methods.transferOwnershipForValidatorSet(address).encodeABI());

              case 1:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function transferOwnershipForValidatorSet(_x9) {
        return _ref7.apply(this, arguments);
      }

      return transferOwnershipForValidatorSet;
    }()
  }, {
    key: 'transferOwnershipForBlockRewards',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8(address) {
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt('return', this.contract.methods.transferOwnershipForBlockRewards(address).encodeABI());

              case 1:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function transferOwnershipForBlockRewards(_x10) {
        return _ref8.apply(this, arguments);
      }

      return transferOwnershipForBlockRewards;
    }()
  }, {
    key: 'setBaseReward',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9(newBaseReward) {
        return _regenerator2.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt('return', this.contract.methods.setBaseReward(newBaseReward).encodeABI());

              case 1:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function setBaseReward(_x11) {
        return _ref9.apply(this, arguments);
      }

      return setBaseReward;
    }()
  }]);
  return MultiplexerWrapper;
}(_genesis_contract_wrapper2.default);

exports.default = MultiplexerWrapper;